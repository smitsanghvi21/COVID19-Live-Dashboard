{"ast":null,"code":"var _jsxFileName = \"/Users/smitsanghvi/Desktop/COVID19-Live-Dashboard/client/src/App.js\";\nimport React, { Component } from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport Card from \"./Components/Card\";\nimport Loading from \"./Components/Loading\";\nimport Paginate from \"./Components/Paginate\";\nimport Result from \"./Components/Result\";\nexport default class App extends Component {\n  constructor() {\n    super();\n\n    this.onSearchChange = e => {\n      console.log(\"search change \" + this.state.searchText);\n\n      if (e.target.value === \"\") {\n        this.setState({\n          searchText: e.target.value,\n          isSearch: false\n        });\n      } else {\n        this.setState({\n          searchText: e.target.value,\n          isSearch: true,\n          showPaginate: false\n        });\n      }\n\n      console.log(\"api data\" + this.state.data[0]);\n    };\n\n    this.handlePageChange = page => {\n      this.setState({\n        currentPage: page\n      });\n    };\n\n    this.state = {\n      data: [],\n      totalData: [],\n      searchText: \"\",\n      searchResult: [],\n      isSearch: false,\n      isLoading: true,\n      pageSize: 8,\n      currentPage: 1,\n      showPaginate: true\n    };\n    this.onSearchChange = this.onSearchChange.bind(this);\n    this.handlePageChange = this.handlePageChange.bind(this);\n  } //for displaying the data of all the countries\n\n\n  componentDidMount() {\n    const url = \"https://corona.lmao.ninja/v2/countries?sort=country\";\n    fetch(url).then(result => result.json()).then(result => {\n      //sorting by highest case\n      var sortedData = result.sort((a, b) => b.cases - a.cases);\n      this.setState({\n        data: sortedData,\n        isLoading: false\n      });\n    }); //for displaying data in the card component\n\n    const totalUrl = \"https://corona.lmao.ninja/v2/all\";\n    fetch(totalUrl).then(result => result.json()).then(result => {\n      //let store=result;\n      //console.log(\"store data\"+store)\n      this.setState({\n        totalData: result\n      });\n      console.log(\"2nd fetched data\" + this.state.totalData);\n    });\n  }\n\n  render() {\n    const indexOfLastItem = this.state.currentPage * this.state.pageSize;\n    console.log(\"indexOfLastItem\" + indexOfLastItem);\n    const indexOfFirstItem = indexOfLastItem - this.state.pageSize;\n    console.log(\"indexOfFirstItem\" + indexOfFirstItem);\n    const currentData = this.state.data.slice(indexOfFirstItem, indexOfLastItem);\n    console.log(\"current data\" + currentData);\n    return this.state.isLoading ? /*#__PURE__*/React.createElement(Loading, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 7\n      }\n    }) : /*#__PURE__*/React.createElement(\"div\", {\n      id: \"main\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Navbar, {\n      bg: \"dark\",\n      variant: \"dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Navbar.Brand, {\n      href: \"#home\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      id: \"live_text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }\n    }, \"Live\"), /*#__PURE__*/React.createElement(\"img\", {\n      alt: \"\",\n      src: \"/logo.svg\",\n      width: \"100\",\n      height: \"30\",\n      className: \"d-inline-block align-top\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }\n    }), \" \", \"Covid-19 dashboard\", /*#__PURE__*/React.createElement(\"span\", {\n      id: \"custom_text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }\n    }, \" Made with \", /*#__PURE__*/React.createElement(\"span\", {\n      id: \"custom_text2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 47\n      }\n    }, \"\\u2764\"), \" in New Zealand\"))), /*#__PURE__*/React.createElement(Card, {\n      totalData: this.state.totalData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Form.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Form.Control, {\n      id: \"search_bar\",\n      value: this.state.searchText,\n      onChange: this.onSearchChange,\n      type: \"text\",\n      placeholder: \"Enter country\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(Result, {\n      data: this.state.isSearch ? this.state.data : currentData,\n      searchCheck: this.state.isSearch,\n      searchValue: this.state.searchText,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }\n    }), !this.state.isSearch && /*#__PURE__*/React.createElement(Paginate, {\n      dataCount: this.state.data.length,\n      pageSize: this.state.pageSize,\n      onPageChange: this.handlePageChange,\n      currentPage: this.state.currentPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/smitsanghvi/Desktop/COVID19-Live-Dashboard/client/src/App.js"],"names":["React","Component","Button","Form","Navbar","Card","Loading","Paginate","Result","App","constructor","onSearchChange","e","console","log","state","searchText","target","value","setState","isSearch","showPaginate","data","handlePageChange","page","currentPage","totalData","searchResult","isLoading","pageSize","bind","componentDidMount","url","fetch","then","result","json","sortedData","sort","a","b","cases","totalUrl","render","indexOfLastItem","indexOfFirstItem","currentData","slice","length"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport Card from \"./Components/Card\";\nimport Loading from \"./Components/Loading\";\nimport Paginate from \"./Components/Paginate\";\nimport Result from \"./Components/Result\";\n\nexport default class App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      data: [],\n      totalData: [],\n      searchText: \"\",\n      searchResult: [],\n      isSearch: false,\n      isLoading: true,\n      pageSize: 8,\n      currentPage: 1,\n      showPaginate: true,\n    };\n    this.onSearchChange = this.onSearchChange.bind(this);\n    this.handlePageChange = this.handlePageChange.bind(this);\n  }\n\n  //for displaying the data of all the countries\n  componentDidMount() {\n    const url = \"https://corona.lmao.ninja/v2/countries?sort=country\";\n    fetch(url)\n      .then((result) => result.json())\n      .then((result) => {\n        //sorting by highest case\n        var sortedData = result.sort((a, b) => b.cases - a.cases);\n        this.setState({\n          data: sortedData,\n          isLoading: false,\n        });\n      });\n\n    //for displaying data in the card component\n    const totalUrl = \"https://corona.lmao.ninja/v2/all\";\n    fetch(totalUrl)\n      .then((result) => result.json())\n      .then((result) => {\n        //let store=result;\n        //console.log(\"store data\"+store)\n        this.setState({\n          totalData: result,\n        });\n        console.log(\"2nd fetched data\" + this.state.totalData);\n      });\n  }\n\n  onSearchChange = (e) => {\n    console.log(\"search change \" + this.state.searchText);\n    if (e.target.value === \"\") {\n      this.setState({ searchText: e.target.value, isSearch: false });\n    } else {\n      this.setState({\n        searchText: e.target.value,\n        isSearch: true,\n        showPaginate: false,\n      });\n    }\n    console.log(\"api data\" + this.state.data[0]);\n  };\n\n  handlePageChange = (page) => {\n    this.setState({\n      currentPage: page,\n    });\n  };\n  render() {\n    const indexOfLastItem = this.state.currentPage * this.state.pageSize;\n    console.log(\"indexOfLastItem\" + indexOfLastItem);\n    const indexOfFirstItem = indexOfLastItem - this.state.pageSize;\n    console.log(\"indexOfFirstItem\" + indexOfFirstItem);\n    const currentData = this.state.data.slice(\n      indexOfFirstItem,\n      indexOfLastItem\n    );\n    console.log(\"current data\" + currentData);\n    return this.state.isLoading ? (\n      <Loading />\n    ) : (\n      <div id=\"main\">\n        <Navbar bg=\"dark\" variant=\"dark\">\n          <Navbar.Brand href=\"#home\">\n            <Button id=\"live_text\">Live</Button>\n            <img\n              alt=\"\"\n              src=\"/logo.svg\"\n              width=\"100\"\n              height=\"30\"\n              className=\"d-inline-block align-top\"\n            />{\" \"}\n            Covid-19 dashboard\n          \n            <span id=\"custom_text\"> Made with <span id=\"custom_text2\">❤</span> in New Zealand</span>\n\n          </Navbar.Brand>\n        </Navbar>\n\n        <Card totalData={this.state.totalData} />\n\n        <Form.Group>\n          <Form.Control\n            id=\"search_bar\"\n            value={this.state.searchText}\n            onChange={this.onSearchChange}\n            type=\"text\"\n            placeholder=\"Enter country\"\n          />\n        </Form.Group>\n\n        <Result\n          data={this.state.isSearch ? this.state.data : currentData}\n          searchCheck={this.state.isSearch}\n          searchValue={this.state.searchText}\n        />\n\n        {!this.state.isSearch && (\n          <Paginate\n            dataCount={this.state.data.length}\n            pageSize={this.state.pageSize}\n            onPageChange={this.handlePageChange}\n            currentPage={this.state.currentPage}\n          />\n        )}\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}